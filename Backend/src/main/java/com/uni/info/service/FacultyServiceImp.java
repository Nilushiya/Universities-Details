package com.uni.info.service;

import com.uni.info.dto.FacultyDto;
import com.uni.info.entity.Faculty;
import com.uni.info.exception.FacultyServiceException;
import com.uni.info.exception.UniversityServiceException;
import com.uni.info.repository.FacultyRepo;
import jakarta.transaction.Transactional;
import org.hibernate.sql.ast.tree.expression.Collation;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.Collections;
import java.util.List;

@Service
public class FacultyServiceImp implements FacultyService{
    @Autowired
    private FacultyRepo facultyRepo;

    @Override
    public FacultyDto createFaculties(FacultyDto facultyDto) throws UniversityServiceException {
        try {
            Faculty faculty = new Faculty();
            BeanUtils.copyProperties(facultyDto, faculty);
            faculty.setFacultyName(facultyDto.getFacultyName());
            faculty.setUId(facultyDto.getU_id());

            Faculty savedFaculty = facultyRepo.save(faculty);

            // Update universityDto with the ID generated by the database
            facultyDto.setFac_id(savedFaculty.getFac_id());

            return facultyDto;
        } catch (Exception e) {
            throw new FacultyServiceException("Failed to create university: " + e.getMessage());
        }
    }

    @Override
    public List<Faculty> groupedByUniversity(Long u_id) {
        return facultyRepo.groupByUniversity(u_id);
    }



    @Override
    public void deleteFaculty(Long facId) {
        facultyRepo.deleteById(facId);
    }

    @Override
    public void updateFaculty(Long facId, FacultyDto facultyDto) {
        facultyRepo.update(facId, facultyDto.getFacultyName(), facultyDto.getU_id());
    }



    @Override
    public List<Faculty> getFaculties() {
        return facultyRepo.findAll();
    }
}
