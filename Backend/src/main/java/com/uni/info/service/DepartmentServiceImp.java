package com.uni.info.service;

import com.uni.info.dto.DepartmentDto;
import com.uni.info.entity.Department;
import com.uni.info.exception.DepartmentServiceException;
import com.uni.info.repository.DepartmentRepo;
import org.springframework.beans.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;

@Service
public class DepartmentServiceImp implements DepartmentService{
    @Autowired
    private DepartmentRepo departmentRepo;
    @Override
    public DepartmentDto createDepartment(DepartmentDto departmentDto) throws DepartmentServiceException {
        try {
            Department department = new Department();
            System.out.println("oooooo");

            BeanUtils.copyProperties(departmentDto, department);
            department.setDepartmentName(departmentDto.getDepartmentName());
            department.setF_id(departmentDto.getF_id());

            Department savedDepartment = departmentRepo.save(department);

            // Update universityDto with the ID generated by the database
            departmentDto.setDep_id(savedDepartment.getDep_id());

            return departmentDto;
        } catch (Exception e) {
            throw new DepartmentServiceException("Failed to create department: " + e.getMessage());
        }
    }

    @Override
    public List<Department> groupDepartment(Long f_id) {
        return departmentRepo.groupDep(f_id);
    }

    @Override
    public List<Department> getDepartment() {
        return departmentRepo.findAll();
    }

    @Override
    public void updateDepartment(Long depId, DepartmentDto departmentDto) {
        departmentRepo.update(depId, departmentDto.getDepartmentName(), departmentDto.getF_id());
    }

    @Override
    public void deleteDepartment(Long depId) {
        departmentRepo.deleteById(depId);
    }

    @Override
    public List<Object[]> getwithAll() {
        return departmentRepo.findAllDetails();
    }
}
